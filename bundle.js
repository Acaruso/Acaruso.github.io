/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"App\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var _gfx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gfx */ \"./src/gfx.js\");\n/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderer */ \"./src/renderer.js\");\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state */ \"./src/state.js\");\n/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./model */ \"./src/model.js\");\n/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui */ \"./src/ui.js\");\n/* harmony import */ var _scripter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scripter */ \"./src/scripter.js\");\n/* harmony import */ var _event_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./event_table */ \"./src/event_table.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass App {\r\n    constructor() {\r\n        this.gfx = new _gfx__WEBPACK_IMPORTED_MODULE_0__.Gfx();\r\n        this.state = new _state__WEBPACK_IMPORTED_MODULE_2__.State();\r\n        this.model = new _model__WEBPACK_IMPORTED_MODULE_3__.Model();\r\n        this.scripter = new _scripter__WEBPACK_IMPORTED_MODULE_5__.Scripter();\r\n        this.eventTable = new _event_table__WEBPACK_IMPORTED_MODULE_6__.EventTable(this.state, this.model);\r\n        this.ui = new _ui__WEBPACK_IMPORTED_MODULE_4__.Ui(\r\n            this.state,\r\n            this.model,\r\n            this.scripter,\r\n            this.eventTable\r\n        );\r\n        this.renderer = new _renderer__WEBPACK_IMPORTED_MODULE_1__.Renderer(this.gfx, this.state, this.model);\r\n\r\n        this.scripter.init([\"a(0)\", \"a(1)\", \"b(0)\", \"b(1)\"]);\r\n\r\n        this.interval = {};\r\n    }\r\n\r\n    startMainLoop() {\r\n        this.interval = setInterval(() => this.loop(), 10);\r\n    }\r\n\r\n    loop() {\r\n        this.gfx.clearScreen();\r\n        this.ui.run();\r\n        this.renderer.render();\r\n        this.gfx.draw();\r\n        this.state.nextState();\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/app.js?");

/***/ }),

/***/ "./src/box.js":
/*!********************!*\
  !*** ./src/box.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Box\": () => (/* binding */ Box)\n/* harmony export */ });\nclass Box {\r\n    constructor(text, coord, id=0) {\r\n        this.coord = { ...coord };\r\n        this.id = id;\r\n        this.charHeight = 14;\r\n        this.charWidth = this.charHeight * 0.55;\r\n        this.xPadding = 4;\r\n        this.yPadding = 6;\r\n        this.text = text;\r\n        this.rect = {};\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    appendChar(c) {\r\n        this.text += c;\r\n        this.updateRect();\r\n    }\r\n\r\n    deleteChar() {\r\n        if (this.text.length > 0) {\r\n            this.text = this.text.slice(0, -1);\r\n        }\r\n        this.updateRect();\r\n    }\r\n\r\n    setCoord(newCoord) {\r\n        this.coord = { ...newCoord };\r\n        this.updateRect();\r\n    }\r\n\r\n    updateRect() {\r\n        const length = this.text.length > 0 ? this.text.length : 1;\r\n\r\n        this.rect = {\r\n            x: this.coord.x,\r\n            y: this.coord.y,\r\n            w: Math.floor(length * this.charWidth) + (this.xPadding * 2),\r\n            h: this.charHeight + this.yPadding\r\n        };\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/box.js?");

/***/ }),

/***/ "./src/boxes.js":
/*!**********************!*\
  !*** ./src/boxes.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Boxes\": () => (/* binding */ Boxes)\n/* harmony export */ });\n/* harmony import */ var _box__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./box */ \"./src/box.js\");\n\r\n\r\nclass Boxes {\r\n    constructor() {\r\n        this.boxes = [];\r\n        this.nextId = 0;\r\n\r\n        // key: id of source\r\n        // value: array of ids of destinations\r\n        this.connections = new Map();\r\n    }\r\n\r\n    addBox(text, coord) {\r\n        const box = new _box__WEBPACK_IMPORTED_MODULE_0__.Box(text, coord, this.nextId);\r\n        this.nextId++;\r\n        this.boxes.push(box);\r\n        this.connections.set(box.id, []);\r\n        return box.id;\r\n    }\r\n\r\n    loadBoxes(boxesStr) {\r\n        const boxData = JSON.parse(boxesStr);\r\n        let maxId = -1;\r\n\r\n        for (const x of boxData) {\r\n            const box = new _box__WEBPACK_IMPORTED_MODULE_0__.Box(x.text, x.coord, x.id);\r\n            this.boxes.push(box);\r\n            maxId = Math.max(maxId, x.id);\r\n        }\r\n\r\n        this.nextId = maxId + 1;\r\n    }\r\n\r\n    loadConnections(connStr) {\r\n        this.connections = new Map(JSON.parse(connStr));\r\n    }\r\n\r\n    getBox(id) {\r\n        return this.boxes.find((box) => box.id === id);\r\n    }\r\n\r\n    deleteBox(id) {\r\n        this.deleteConnections(id);\r\n        this.boxes = this.boxes.filter((box) => box.id !== id);\r\n    }\r\n\r\n    deleteAll() {\r\n        this.boxes.forEach(box => this.deleteBox(box.id));\r\n    }\r\n\r\n    addConnection(source, dest) {\r\n        let destArr = this.connections.get(source);\r\n\r\n        if (!destArr.includes(dest)) {\r\n            destArr.push(dest);\r\n        }\r\n    }\r\n\r\n    getConnections() {\r\n        let out = [];\r\n\r\n        for (const [source, destArr] of this.connections) {\r\n            for (const dest of destArr) {\r\n                out.push([\r\n                    this.getBox(source),\r\n                    this.getBox(dest)\r\n                ]);\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    deleteConnections(id) {\r\n        this.connections.delete(id);\r\n        for (let [source, destArr] of this.connections) {\r\n            this.connections.set(source, destArr.filter(x => x !== id));\r\n        }\r\n    }\r\n\r\n    forEach(fn) {\r\n        this.boxes.forEach(fn);\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/boxes.js?");

/***/ }),

/***/ "./src/event_table.js":
/*!****************************!*\
  !*** ./src/event_table.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EventTable\": () => (/* binding */ EventTable)\n/* harmony export */ });\nclass EventTable {\r\n    constructor(state, model) {\r\n        this.state = state;\r\n        this.model = model;\r\n        this.table = [];\r\n    }\r\n\r\n    addEvent(name, shouldRun, run) {\r\n        this.table.push([name, shouldRun, run]);\r\n    }\r\n\r\n    formatEvent(e) {\r\n        e.key_ = e.key ? e.key.toLowerCase() : \"\";\r\n        e.mousedown = e.type === \"mousedown\";\r\n        e.mouseup = e.type === \"mouseup\";\r\n        e.keydown = e.type === \"keydown\";\r\n        e.insideBox = false;\r\n        e.mouseBox = null;\r\n        e.keyboard = this.state.cur.keyboard;\r\n        e.mouse = this.state.cur.mouse;\r\n    }\r\n\r\n    enrichEvent(e) {\r\n        this.formatEvent(e);\r\n        const boxes = this.model.boxes;\r\n\r\n        boxes.forEach((box) => {\r\n            if (this.state.isMouseInside(box.rect)) {\r\n                e.insideBox = true;\r\n                e.mouseBox = box;\r\n            }\r\n        });\r\n\r\n        // if (e.mousedown || e.mouseup) {\r\n        //     boxes.forEach((box) => {\r\n        //         if (this.state.isMouseInside(box.rect)) {\r\n        //             e.insideBox = true;\r\n        //             e.mouseBox = box;\r\n        //         }\r\n        //     });\r\n        // }\r\n\r\n        return e;\r\n    }\r\n\r\n    onEvent(e) {\r\n        this.enrichEvent(e);\r\n        for (const [name, shouldRun, run] of this.table) {\r\n            if (shouldRun(e)) {\r\n                run(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/event_table.js?");

/***/ }),

/***/ "./src/gfx.js":
/*!********************!*\
  !*** ./src/gfx.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Gfx\": () => (/* binding */ Gfx)\n/* harmony export */ });\nclass Gfx {\r\n    constructor() {\r\n        this.canvas = document.getElementById(\"myCanvas\")\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.textStyle = \"Consolas\";\r\n        this.queue = [];\r\n    }\r\n\r\n    drawRect(rect, z=0) {\r\n        const command = (ctx) => {\r\n            const color = rect.color ? rect.color : \"#000000\";\r\n\r\n            // 0.0 == transparent, 1.0 == solid\r\n            const alpha = rect.alpha ? rect.alpha : 1.0;\r\n\r\n            this.ctx.globalAlpha = alpha;\r\n            ctx.fillStyle = color;\r\n            ctx.beginPath();\r\n            ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n            this.ctx.globalAlpha = 1.0;\r\n        };\r\n\r\n        this.queue.push({\r\n            command,\r\n            z: z\r\n        });\r\n    }\r\n\r\n    strokeRect(rect, z=0) {\r\n        const upperLeft = { x: rect.x, y: rect.y };\r\n        const upperRight = { x: rect.x + rect.w, y: rect.y };\r\n        const lowerRight = { x: rect.x + rect.w, y: rect.y + rect.h };\r\n        const lowerLeft = { x: rect.x, y: rect.y + rect.h };\r\n\r\n        this.drawLine(upperLeft, upperRight, z);\r\n        this.drawLine(upperRight, lowerRight, z);\r\n        this.drawLine(lowerRight, lowerLeft, z);\r\n        this.drawLine(lowerLeft, upperLeft, z);\r\n    }\r\n\r\n    // note that y-coord is *bottom* left side of text\r\n    drawText(text, size, coord, z=0) {\r\n        const command = (ctx) => {\r\n            ctx.font = `${size}px ${this.textStyle}`;\r\n            ctx.fillStyle = \"#000000\";\r\n            ctx.fillText(text, coord.x, coord.y);\r\n        };\r\n\r\n        this.queue.push({\r\n            command,\r\n            z: z\r\n        });\r\n    }\r\n\r\n    drawLine(beginCoord, endCoord, z=0) {\r\n        const command = (ctx) => {\r\n            ctx.fillStyle = \"#000000\";\r\n            ctx.beginPath();\r\n            ctx.moveTo(beginCoord.x, beginCoord.y);\r\n            ctx.lineTo(endCoord.x, endCoord.y);\r\n            ctx.stroke();\r\n        };\r\n\r\n        this.queue.push({\r\n            command,\r\n            z: z\r\n        });\r\n    }\r\n\r\n    draw() {\r\n        this.queue.sort((first, second) => {\r\n            return second.z - first.z;\r\n        });\r\n\r\n        while (this.queue.length > 0) {\r\n            const elt = this.queue[this.queue.length - 1];\r\n            elt.command(this.ctx);\r\n            this.queue.pop();\r\n        }\r\n    }\r\n\r\n    clearScreen() {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/gfx.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app */ \"./src/app.js\");\n\r\n\r\ndocument.body.onload = () => {\r\n    const app = new _app__WEBPACK_IMPORTED_MODULE_0__.App();\r\n    app.startMainLoop();\r\n};\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/index.js?");

/***/ }),

/***/ "./src/model.js":
/*!**********************!*\
  !*** ./src/model.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Model\": () => (/* binding */ Model)\n/* harmony export */ });\n/* harmony import */ var _boxes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boxes */ \"./src/boxes.js\");\n\r\n\r\nclass Model {\r\n    constructor() {\r\n        this.boxes = new _boxes__WEBPACK_IMPORTED_MODULE_0__.Boxes();\r\n\r\n        this.selectedBoxIds = [];\r\n\r\n        this.selectedBoxId = -1;\r\n        this.draggingBoxes = false;\r\n        this.draggingSelectedRegion = false;\r\n\r\n        this.lineBegin = { x: 0, y: 0 };\r\n        this.drawingLine = false;\r\n        this.outBox = {};\r\n\r\n        this.numLevels = 1;\r\n\r\n        this.selectedRegion = { x: 0, y: 0, w: 0, h: 0, alpha: 0.3 };\r\n    }\r\n\r\n    anyBoxesSelected() {\r\n        return this.selectedBoxIds.length > 0;\r\n    }\r\n\r\n    isBoxSelected(id) {\r\n        return this.selectedBoxIds.includes(id);\r\n    }\r\n\r\n    addSelectedBoxId(id) {\r\n        if (!this.selectedBoxIds.includes(id)) {\r\n            this.selectedBoxIds.push(id);\r\n        }\r\n    }\r\n\r\n    clearSelectedBoxIds() {\r\n        while (this.selectedBoxIds.length > 0) {\r\n            this.selectedBoxIds.pop();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/model.js?");

/***/ }),

/***/ "./src/renderer.js":
/*!*************************!*\
  !*** ./src/renderer.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Renderer\": () => (/* binding */ Renderer)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/util.js\");\n\r\n\r\nclass Renderer {\r\n    constructor(gfx, state, model) {\r\n        this.gfx = gfx;\r\n        this.state = state;\r\n        this.model = model;\r\n    }\r\n\r\n    render() {\r\n        this.drawBoxes();\r\n        this.drawSelectedBoxes();\r\n        this.drawLine();\r\n        this.drawConnections();\r\n        this.drawSelectedRegion();\r\n    }\r\n\r\n    drawBoxes() {\r\n        this.model.boxes.forEach(box => this.drawBox(box));\r\n    }\r\n\r\n    drawBox(box) {\r\n        this.drawBoxRect(box);\r\n        this.drawBoxText(box);\r\n    }\r\n\r\n    drawBoxRect(box) {\r\n        const bgRect = {\r\n            ...box.rect,\r\n            color: \"#FFFFFF\"\r\n        };\r\n\r\n        this.gfx.drawRect(bgRect, 0);\r\n        this.gfx.strokeRect(box.rect, 1);\r\n    }\r\n\r\n    drawBoxText(box) {\r\n        this.gfx.drawText(\r\n            box.text,\r\n            box.charHeight,\r\n            { x: box.coord.x + box.xPadding, y: box.coord.y + box.charHeight },\r\n            2\r\n        );\r\n    }\r\n\r\n    drawSelectedBoxes() {\r\n        const boxes = this.model.boxes;\r\n\r\n        for (const selectedBoxId of this.model.selectedBoxIds) {\r\n            const selectedBox = boxes.getBox(selectedBoxId);\r\n            const rect = { ...selectedBox.rect };\r\n            rect.x -= 2;\r\n            rect.y -= 2;\r\n            rect.w += 4;\r\n            rect.h += 4;\r\n            this.gfx.strokeRect(rect);\r\n        }\r\n    }\r\n\r\n    drawLine() {\r\n        if (\r\n            this.state.cur.mouse.clicked\r\n            && this.state.cur.keyboard.control\r\n            && this.model.drawingLine\r\n        ) {\r\n            const curMouse = this.state.cur.mouse;\r\n            this.gfx.drawLine(this.model.lineBegin, { ...curMouse.coord }, -1);\r\n        }\r\n    }\r\n\r\n    drawConnections() {\r\n        this.model.boxes.getConnections()\r\n            .map(([box1, box2]) => [(0,_util__WEBPACK_IMPORTED_MODULE_0__.getMidpoint)(box1.rect), (0,_util__WEBPACK_IMPORTED_MODULE_0__.getMidpoint)(box2.rect)])\r\n            .forEach(([begin, end]) => this.gfx.drawLine(begin, end, -1));\r\n    }\r\n\r\n    drawSelectedRegion() {\r\n        if (this.model.draggingSelectedRegion) {\r\n            this.gfx.drawRect(this.model.selectedRegion, 10);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/renderer.js?");

/***/ }),

/***/ "./src/scripter.js":
/*!*************************!*\
  !*** ./src/scripter.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Scripter\": () => (/* binding */ Scripter)\n/* harmony export */ });\nclass Scripter {\r\n    constructor() {}\r\n\r\n    init(input) {\r\n        this.arr = this.makePerm(input);\r\n        this.idx = this.arr.length - 1;\r\n    }\r\n\r\n    getNext() {\r\n        // if (this.idx >= 0) {\r\n        //     return this.arr[this.idx--];\r\n        // } else {\r\n        //     return \"\";\r\n        // }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    makePerm(input) {\r\n        const numLevels = input.length + 1;\r\n        let queue = [];\r\n        let levelsArr = [];\r\n\r\n        levelsArr.push([\"\"]);\r\n        queue.push(\"\");\r\n\r\n        for (let level = 1; level < numLevels; level++) {\r\n            let levelArr = [];\r\n            let n = queue.length;\r\n\r\n            for (let k = 0; k < n; k++) {\r\n                let cur = queue.shift();\r\n                let curArr = cur.split(\",\");\r\n                for (const elt of input) {\r\n                    if (!curArr.includes(elt)) {\r\n                        let newText = cur === \"\" ? elt : cur + \",\" + elt;\r\n                        levelArr.push(newText);\r\n                        queue.push(newText);\r\n                    }\r\n                }\r\n            }\r\n            levelsArr.push(levelArr);\r\n        }\r\n\r\n        const flatArr = levelsArr.flat(2);\r\n        return flatArr;\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/scripter.js?");

/***/ }),

/***/ "./src/state.js":
/*!**********************!*\
  !*** ./src/state.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"State\": () => (/* binding */ State)\n/* harmony export */ });\n/* harmony import */ var _state_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state_util */ \"./src/state_util.js\");\n\r\n\r\nclass State {\r\n    constructor() {\r\n        this.cur = (0,_state_util__WEBPACK_IMPORTED_MODULE_0__.makeState)();\r\n        this.prev = (0,_state_util__WEBPACK_IMPORTED_MODULE_0__.makeState)();\r\n\r\n        const eventListener = (e) => {\r\n            // handle keyboard events\r\n            if (e.key) {\r\n                const key = e.key.toLowerCase();\r\n                if (e.type === \"keydown\") {\r\n                    this.cur.keyboard[key] = true;\r\n                } else if (e.type === \"keyup\") {\r\n                    this.cur.keyboard[key] = false;\r\n                }\r\n            }\r\n\r\n            // handle mouse events\r\n            else if (e.type === \"mousedown\") {\r\n                this.cur.mouse.clicked = true;\r\n            } else if (e.type === \"mouseup\") {\r\n                this.cur.mouse.clicked = false;\r\n            } else if (e.type === \"mousemove\") {\r\n                this.cur.mouse.coord.x = e.offsetX;\r\n                this.cur.mouse.coord.y = e.offsetY;\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"keydown\", eventListener, false);\r\n        document.addEventListener(\"keyup\", eventListener, false);\r\n        document.addEventListener(\"mousedown\", eventListener, false);\r\n        document.addEventListener(\"mouseup\", eventListener, false);\r\n        document.addEventListener(\"mousemove\", eventListener, false);\r\n\r\n        // prevent spacebar from scrolling\r\n        window.addEventListener('keydown', (e) => {\r\n            if (e.keyCode === 32 && e.target === document.body) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    isKeydown(key) {\r\n        return this.cur.keyboard[key] && !this.prev.keyboard[key];\r\n    }\r\n\r\n    isMouseInside(rect) {\r\n        const mouse = this.cur.mouse;\r\n        return (\r\n            mouse.coord.x > rect.x\r\n            && mouse.coord.x < rect.x + rect.w\r\n            && mouse.coord.y > rect.y\r\n            && mouse.coord.y < rect.y + rect.h\r\n        );\r\n    }\r\n\r\n    isMousedown() {\r\n        return this.cur.mouse.clicked && !this.prev.mouse.clicked;\r\n    }\r\n\r\n    isMouseup() {\r\n        return !this.cur.mouse.clicked && this.prev.mouse.clicked;\r\n    }\r\n\r\n    isMousedownInside(rect) {\r\n        return this.isMousedown() && this.isMouseInside(rect);\r\n    }\r\n\r\n    isMouseupInside(rect) {\r\n        return this.isMouseup() && this.isMouseInside(rect);\r\n    }\r\n\r\n    getMouseCoord() {\r\n        return this.cur.mouse.coord;\r\n    }\r\n\r\n    getMouseXDelta() {\r\n        return this.cur.mouse.coord.x - this.prev.mouse.coord.x;\r\n    }\r\n\r\n    getMouseYDelta() {\r\n        return this.cur.mouse.coord.y - this.prev.mouse.coord.y;\r\n    }\r\n\r\n    nextState() {\r\n        this.prev.mouse.coord = { ...this.cur.mouse.coord };\r\n        this.prev.mouse.clicked = this.cur.mouse.clicked;\r\n        this.prev.keyboard = { ...this.cur.keyboard };\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/state.js?");

/***/ }),

/***/ "./src/state_util.js":
/*!***************************!*\
  !*** ./src/state_util.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeState\": () => (/* binding */ makeState)\n/* harmony export */ });\nconst makeState = () => {\r\n    return {\r\n        mouse: {\r\n            clicked: false,\r\n            coord: { x: 0, y: 0 },\r\n        },\r\n        keyboard: {\r\n            arrowup: false,\r\n            arrowdown: false,\r\n            arrowright: false,\r\n            arrowleft: false,\r\n            control: false,\r\n            shift: false,\r\n            alt: false,\r\n            backspace: false,\r\n            a: false,\r\n            b: false,\r\n            c: false,\r\n            d: false,\r\n            e: false,\r\n            f: false,\r\n            g: false,\r\n            h: false,\r\n            i: false,\r\n            j: false,\r\n            k: false,\r\n            l: false,\r\n            m: false,\r\n            n: false,\r\n            o: false,\r\n            p: false,\r\n            q: false,\r\n            r: false,\r\n            s: false,\r\n            t: false,\r\n            u: false,\r\n            v: false,\r\n            w: false,\r\n            x: false,\r\n            y: false,\r\n            z: false,\r\n        },\r\n    };\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/state_util.js?");

/***/ }),

/***/ "./src/ui.js":
/*!*******************!*\
  !*** ./src/ui.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ui\": () => (/* binding */ Ui)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/util.js\");\n\r\n\r\nclass Ui {\r\n    constructor(state, model, scripter, eventTable) {\r\n        this.state = state;\r\n        this.model = model;\r\n        this.scripter = scripter;\r\n        this.eventTable = eventTable;\r\n\r\n        addEventListener(\"mousedown\", e => this.eventTable.onEvent(e));\r\n        addEventListener(\"mouseup\", e => this.eventTable.onEvent(e));\r\n        addEventListener(\"keydown\", e => this.eventTable.onEvent(e));\r\n\r\n        this.addEventListeners();\r\n    }\r\n\r\n    addEventListeners() {\r\n        this.eventTable.addEvent(\r\n            \"beginConnection\",\r\n            e => e.mousedown && e.insideBox && e.keyboard.control,\r\n            e => {\r\n                this.model.lineBegin = (0,_util__WEBPACK_IMPORTED_MODULE_0__.getMidpoint)(e.mouseBox.rect);\r\n                this.model.outBox = e.mouseBox;\r\n                this.model.drawingLine = true;\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"addBox\",\r\n            e => e.mousedown && e.keyboard.alt && !e.insideBox,\r\n            e => {\r\n                const text = this.scripter.getNext();\r\n                const newBoxId = this.model.boxes.addBox(text, e.mouse.coord);\r\n                this.model.clearSelectedBoxIds();\r\n                this.model.addSelectedBoxId(newBoxId);\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"duplicateBox\",\r\n            e => e.mousedown && e.keyboard.alt && e.insideBox,\r\n            e => {\r\n                const newBoxId = this.model.boxes.addBox(e.mouseBox.text, e.mouse.coord);\r\n                this.model.clearSelectedBoxIds();\r\n                this.model.addSelectedBoxId(newBoxId);\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"deleteBox\",\r\n            e => e.keydown && e.key_ === \"delete\" && this.model.anyBoxesSelected(),\r\n            e => {\r\n                for (const id of this.model.selectedBoxIds) {\r\n                    this.model.boxes.deleteBox(id);\r\n                }\r\n                this.model.clearSelectedBoxIds();\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"clickAndSelectBox\",\r\n            e => {\r\n                return e.mousedown\r\n                    && e.insideBox\r\n                    && !e.keyboard.control\r\n                    && !e.keyboard.shift\r\n                    && !e.keyboard.alt\r\n                    && !this.model.isBoxSelected(e.mouseBox.id);\r\n            },\r\n            e => {\r\n                this.model.clearSelectedBoxIds();\r\n                this.model.addSelectedBoxId(e.mouseBox.id);\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"shiftClickAndAddSelectBox\",\r\n            e => e.mousedown && e.insideBox && !e.keyboard.control && e.keyboard.shift,\r\n            e => this.model.addSelectedBoxId(e.mouseBox.id)\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"clickAndUnselectBox\",\r\n            e => e.mousedown && !e.insideBox && !e.keyboard.control && !e.keyboard.alt,\r\n            e => this.model.clearSelectedBoxIds()\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"beginDraggingBoxes\",\r\n            e => e.mousedown && !e.keyboard.control && e.insideBox,\r\n            e => this.model.draggingBoxes = true\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"beginDraggingSelectedRegion\",\r\n            e => e.mousedown && !e.keyboard.control && !e.insideBox,\r\n            e => this.model.draggingSelectedRegion = true\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"setSelectedRegionCoords\",\r\n            e => e.mousedown && !e.keyboard.control,\r\n            e => {\r\n                this.model.selectedRegion = {\r\n                    x: e.mouse.coord.x,\r\n                    y: e.mouse.coord.y,\r\n                    w: 0,\r\n                    h: 0,\r\n                    alpha: 0.3,\r\n                };\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"addConnection\",\r\n            e => e.mouseup && e.insideBox && this.model.drawingLine,\r\n            e => {\r\n                this.model.boxes.addConnection(\r\n                    this.model.outBox.id,\r\n                    e.mouseBox.id\r\n                );\r\n                this.model.drawingLine = false;\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"endDraggingBoxes\",\r\n            e => e.mouseup,\r\n            e => this.model.draggingBoxes = false\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"endDrawingLine\",\r\n            e => e.mouseup,\r\n            e => this.model.drawingLine = false\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"endDraggingSelectedRegion\",\r\n            e => e.mouseup,\r\n            e => this.model.draggingSelectedRegion = false\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"appendChar\",\r\n            e => {\r\n                return e.keydown\r\n                    && this.model.anyBoxesSelected()\r\n                    && (0,_util__WEBPACK_IMPORTED_MODULE_0__.isPrintableKeycode)(e.which)\r\n                    && !e.keyboard.control\r\n            },\r\n            e => {\r\n                for (const id of this.model.selectedBoxIds) {\r\n                    let box = this.model.boxes.getBox(id);\r\n                    box.appendChar(e.key_);\r\n                }\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"deleteChar\",\r\n            e => {\r\n                return e.keydown\r\n                    && this.model.anyBoxesSelected()\r\n                    && e.key_ === \"backspace\";\r\n            },\r\n            e => {\r\n                for (const id of this.model.selectedBoxIds) {\r\n                    let box = this.model.boxes.getBox(id);\r\n                    box.deleteChar();\r\n                }\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"horizontalAlign\",\r\n            e => e.keydown && e.keyboard.control && e.keyboard.h,\r\n            e => {\r\n                e.preventDefault();\r\n                let minY = 10000000;\r\n                for (const id of this.model.selectedBoxIds) {\r\n                    let box = this.model.boxes.getBox(id);\r\n                    minY = Math.min(minY, box.coord.y);\r\n                }\r\n\r\n                for (const id of this.model.selectedBoxIds) {\r\n                    let box = this.model.boxes.getBox(id);\r\n                    box.setCoord({ x: box.coord.x, y: minY });\r\n                }\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"verticalAlign\",\r\n            e => e.keydown && e.keyboard.control && e.keyboard.v,\r\n            e => {\r\n                e.preventDefault();\r\n                let minXMid = 10000000;\r\n                for (const id of this.model.selectedBoxIds) {\r\n                    let box = this.model.boxes.getBox(id);\r\n                    minXMid = Math.min(\r\n                        minXMid,\r\n                        Math.floor(box.rect.x + (box.rect.w / 2))\r\n                    );\r\n                }\r\n\r\n                for (const id of this.model.selectedBoxIds) {\r\n                    let box = this.model.boxes.getBox(id);\r\n                    box.setCoord({\r\n                        x: minXMid - Math.floor(box.rect.w / 2),\r\n                        y: box.coord.y\r\n                    });\r\n                }\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"selectAll\",\r\n            e => e.keydown && e.keyboard.control && e.keyboard.a,\r\n            e => {\r\n                this.model.clearSelectedBoxIds();\r\n                this.model.boxes.forEach(elt => {\r\n                    this.model.addSelectedBoxId(elt.id);\r\n                });\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"saveFile\",\r\n            e => e.keydown && e.keyboard.control && e.keyboard.s,\r\n            async e => {\r\n                e.preventDefault();\r\n                try {\r\n                    const boxesStr = JSON.stringify(this.model.boxes.boxes);\r\n                    const connStr = JSON.stringify([...this.model.boxes.connections]);\r\n                    await (0,_util__WEBPACK_IMPORTED_MODULE_0__.saveFile)(boxesStr + \"\\n\" + connStr);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n                this.state.cur.keyboard.control = false;\r\n                this.state.cur.keyboard.s = false;\r\n            }\r\n        );\r\n\r\n        this.eventTable.addEvent(\r\n            \"loadFile\",\r\n            e => e.keydown && e.keyboard.control && e.keyboard.l,\r\n            async e => {\r\n                e.preventDefault();\r\n                try {\r\n                    const content = await (0,_util__WEBPACK_IMPORTED_MODULE_0__.loadFile)();\r\n\r\n                    this.model.boxes.deleteAll();\r\n                    const [boxesStr, connStr] = content.split(/\\n/);\r\n                    this.model.boxes.loadBoxes(boxesStr);\r\n                    this.model.boxes.loadConnections(connStr);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n                this.state.cur.keyboard.control = false;\r\n                this.state.cur.keyboard.l = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    handleDragging() {\r\n        if (this.model.draggingBoxes && this.model.anyBoxesSelected()) {\r\n            // drag boxes\r\n            for (const id of this.model.selectedBoxIds) {\r\n                const box = this.model.boxes.getBox(id);\r\n\r\n                const newCoord = {\r\n                    x: box.coord.x + this.state.getMouseXDelta(),\r\n                    y: box.coord.y + this.state.getMouseYDelta()\r\n                };\r\n\r\n                box.setCoord(newCoord);\r\n            }\r\n        } else if (this.model.draggingSelectedRegion) {\r\n            // drag selected region\r\n            this.model.selectedRegion.w += this.state.getMouseXDelta();\r\n            this.model.selectedRegion.h += this.state.getMouseYDelta();\r\n\r\n            this.model.boxes.forEach(box => {\r\n                if ((0,_util__WEBPACK_IMPORTED_MODULE_0__.rectsOverlap)(box.rect, this.model.selectedRegion)) {\r\n                    this.model.addSelectedBoxId(box.id);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    run() {\r\n        this.handleDragging();\r\n    }\r\n}\r\n\r\nconst addEventListener = (type, callback) => {\r\n    document.addEventListener(type, callback, false);\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/ui.js?");

/***/ }),

/***/ "./src/util.js":
/*!*********************!*\
  !*** ./src/util.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getMidpoint\": () => (/* binding */ getMidpoint),\n/* harmony export */   \"distanceBetweenCoords\": () => (/* binding */ distanceBetweenCoords),\n/* harmony export */   \"rectsOverlap\": () => (/* binding */ rectsOverlap),\n/* harmony export */   \"isPrintableKeycode\": () => (/* binding */ isPrintableKeycode),\n/* harmony export */   \"saveFile\": () => (/* binding */ saveFile),\n/* harmony export */   \"loadFile\": () => (/* binding */ loadFile)\n/* harmony export */ });\nconst getMidpoint = (rect) => {\r\n    return {\r\n        x: rect.x + (rect.w / 2),\r\n        y: rect.y + (rect.h / 2)\r\n    };\r\n};\r\n\r\nconst distanceBetweenCoords = (coord1, coord2) => {\r\n    const a = Math.abs(coord1.x - coord2.x);\r\n    const b = Math.abs(coord1.y - coord2.y);\r\n    return Math.sqrt(a*a + b*b);\r\n};\r\n\r\nconst handleNegs = (rect) => {\r\n    let newRect = { ...rect };\r\n\r\n    if (newRect.w < 0) {\r\n        newRect.x += newRect.w;\r\n        newRect.w = Math.abs(newRect.w);\r\n    }\r\n\r\n    if (newRect.h < 0) {\r\n        newRect.y += newRect.h;\r\n        newRect.h = Math.abs(newRect.h)\r\n    }\r\n\r\n    return newRect;\r\n};\r\n\r\nconst rectsOverlap = (rect1, rect2) => {\r\n    rect1 = handleNegs(rect1);\r\n    rect2 = handleNegs(rect2);\r\n\r\n    return (\r\n        rect1.x < rect2.x + rect2.w &&\r\n        rect1.x + rect1.w > rect2.x &&\r\n        rect1.y < rect2.y + rect2.h &&\r\n        rect1.y + rect1.h > rect2.y\r\n    );\r\n};\r\n\r\nconst isPrintableKeycode = (kc) => {\r\n    return (\r\n        (kc > 47 && kc < 58)        // number keys\r\n        || (kc == 32)               // spacebar\r\n        || (kc > 64 && kc < 91)     // letter keys\r\n        || (kc > 95 && kc < 112)    // numpad keys\r\n        || (kc > 185 && kc < 193)   // ;=,-./`\r\n        || (kc > 218 && kc < 223)   // [\\]'\r\n    );\r\n};\r\n\r\n// see: https://web.dev/file-system-access/\r\nconst saveFile = async (content) => {\r\n    const options = {\r\n        types: [{\r\n            description: 'Text Files',\r\n            accept: { 'text/plain': ['.txt'] }\r\n        }]\r\n    };\r\n\r\n    const fileHandle = await window.showSaveFilePicker(options);\r\n    const writable = await fileHandle.createWritable();\r\n    await writable.write(content);\r\n    await writable.close();\r\n};\r\n\r\nconst loadFile = async () => {\r\n    const [fileHandle] = await window.showOpenFilePicker();\r\n    const file = await fileHandle.getFile();\r\n    const content = await file.text();\r\n    return content;\r\n};\r\n\r\n// const loadFile = async (cb) => {\r\n//     const [fileHandle] = await window.showOpenFilePicker();\r\n//     const file = await fileHandle.getFile();\r\n//     const content = await file.text();\r\n//     cb(content);\r\n//     // return content;\r\n// };\r\n\r\n\r\n\n\n//# sourceURL=webpack://boxes-and-arrows/./src/util.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;